// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: contracts/objects.proto

package contracts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SiteState int32

const (
	SiteState_SiteState_UNKNOWN SiteState = 0 // Default value, used as a placeholder
	SiteState_SiteState_ONLINE  SiteState = 1 // Relay is on
	SiteState_SiteState_OFFLINE SiteState = 2 // Relay is off
	SiteState_SiteState_ERROR   SiteState = 3 // Not available or missing
)

// Enum value maps for SiteState.
var (
	SiteState_name = map[int32]string{
		0: "SiteState_UNKNOWN",
		1: "SiteState_ONLINE",
		2: "SiteState_OFFLINE",
		3: "SiteState_ERROR",
	}
	SiteState_value = map[string]int32{
		"SiteState_UNKNOWN": 0,
		"SiteState_ONLINE":  1,
		"SiteState_OFFLINE": 2,
		"SiteState_ERROR":   3,
	}
)

func (x SiteState) Enum() *SiteState {
	p := new(SiteState)
	*p = x
	return p
}

func (x SiteState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SiteState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[0].Descriptor()
}

func (SiteState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[0]
}

func (x SiteState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SiteState.Descriptor instead.
func (SiteState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

type PlugState int32

const (
	PlugState_PlugState_UNKNOWN     PlugState = 0 // Default value, used as a placeholder
	PlugState_PlugState_ON          PlugState = 1 // Relay is on
	PlugState_PlugState_OFF         PlugState = 2 // Relay is off
	PlugState_PlugState_MIA         PlugState = 3 // Not available or missing
	PlugState_PlugState_OVERCURRENT PlugState = 4 // Overcurrent detected
)

// Enum value maps for PlugState.
var (
	PlugState_name = map[int32]string{
		0: "PlugState_UNKNOWN",
		1: "PlugState_ON",
		2: "PlugState_OFF",
		3: "PlugState_MIA",
		4: "PlugState_OVERCURRENT",
	}
	PlugState_value = map[string]int32{
		"PlugState_UNKNOWN":     0,
		"PlugState_ON":          1,
		"PlugState_OFF":         2,
		"PlugState_MIA":         3,
		"PlugState_OVERCURRENT": 4,
	}
)

func (x PlugState) Enum() *PlugState {
	p := new(PlugState)
	*p = x
	return p
}

func (x PlugState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlugState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[1].Descriptor()
}

func (PlugState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[1]
}

func (x PlugState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlugState.Descriptor instead.
func (PlugState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

type PlugStateRequest int32

const (
	PlugStateRequest_PlugStateRequest_UNKNOWN PlugStateRequest = 0 // Default value, used as a placeholder
	PlugStateRequest_PlugStateRequest_ON      PlugStateRequest = 1 // Relay is on
	PlugStateRequest_PlugStateRequest_OFF     PlugStateRequest = 2 // Relay is off
)

// Enum value maps for PlugStateRequest.
var (
	PlugStateRequest_name = map[int32]string{
		0: "PlugStateRequest_UNKNOWN",
		1: "PlugStateRequest_ON",
		2: "PlugStateRequest_OFF",
	}
	PlugStateRequest_value = map[string]int32{
		"PlugStateRequest_UNKNOWN": 0,
		"PlugStateRequest_ON":      1,
		"PlugStateRequest_OFF":     2,
	}
)

func (x PlugStateRequest) Enum() *PlugStateRequest {
	p := new(PlugStateRequest)
	*p = x
	return p
}

func (x PlugStateRequest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlugStateRequest) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[2].Descriptor()
}

func (PlugStateRequest) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[2]
}

func (x PlugStateRequest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlugStateRequest.Descriptor instead.
func (PlugStateRequest) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{2}
}

type PlugStateRequestReason int32

const (
	PlugStateRequestReason_PlugStateRequestReason_UNKNOWN PlugStateRequestReason = 0 // Default value, used as a placeholder
	PlugStateRequestReason_PlugStateRequestReason_PRICE   PlugStateRequestReason = 1
	PlugStateRequestReason_PlugStateRequestReason_USER    PlugStateRequestReason = 2
	PlugStateRequestReason_PlugStateRequestReason_CREDIT  PlugStateRequestReason = 3
)

// Enum value maps for PlugStateRequestReason.
var (
	PlugStateRequestReason_name = map[int32]string{
		0: "PlugStateRequestReason_UNKNOWN",
		1: "PlugStateRequestReason_PRICE",
		2: "PlugStateRequestReason_USER",
		3: "PlugStateRequestReason_CREDIT",
	}
	PlugStateRequestReason_value = map[string]int32{
		"PlugStateRequestReason_UNKNOWN": 0,
		"PlugStateRequestReason_PRICE":   1,
		"PlugStateRequestReason_USER":    2,
		"PlugStateRequestReason_CREDIT":  3,
	}
)

func (x PlugStateRequestReason) Enum() *PlugStateRequestReason {
	p := new(PlugStateRequestReason)
	*p = x
	return p
}

func (x PlugStateRequestReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlugStateRequestReason) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[3].Descriptor()
}

func (PlugStateRequestReason) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[3]
}

func (x PlugStateRequestReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlugStateRequestReason.Descriptor instead.
func (PlugStateRequestReason) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{3}
}

type Plug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlugId  string   `protobuf:"bytes,1,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"` // The plug ID
	Reading *Reading `protobuf:"bytes,2,opt,name=reading,proto3" json:"reading,omitempty" firestore:"reading"`             // The reading for the plug
}

func (x *Plug) Reset() {
	*x = Plug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plug) ProtoMessage() {}

func (x *Plug) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plug.ProtoReflect.Descriptor instead.
func (*Plug) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

func (x *Plug) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *Plug) GetReading() *Reading {
	if x != nil {
		return x.Reading
	}
	return nil
}

type PlugSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`                                                // The name of the plug
	PlugId       string        `protobuf:"bytes,2,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`                           // The plug ID
	Strategy     *PlugStrategy `protobuf:"bytes,3,opt,name=strategy,proto3" json:"strategy,omitempty" firestore:"strategy"`                                    // The strategy for the plug
	CurrentLimit float64       `protobuf:"fixed64,4,opt,name=current_limit,json=currentLimit,proto3" json:"current_limit,omitempty" firestore:"current_limit"` // The current limit for the plug
}

func (x *PlugSettings) Reset() {
	*x = PlugSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugSettings) ProtoMessage() {}

func (x *PlugSettings) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugSettings.ProtoReflect.Descriptor instead.
func (*PlugSettings) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

func (x *PlugSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlugSettings) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *PlugSettings) GetStrategy() *PlugStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *PlugSettings) GetCurrentLimit() float64 {
	if x != nil {
		return x.CurrentLimit
	}
	return 0
}

type PlugStateRequestRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlugId         string                 `protobuf:"bytes,1,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"` // The plug ID
	StateRequested PlugStateRequest       `protobuf:"varint,2,opt,name=state_requested,json=stateRequested,proto3,enum=contracts.PlugStateRequest" json:"state_requested,omitempty" firestore:"state_requested"`
	TimestampMs    int64                  `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty" firestore:"timestamp_ms"`
	UserId         string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" firestore:"user_id"`
	Reason         PlugStateRequestReason `protobuf:"varint,5,opt,name=reason,proto3,enum=contracts.PlugStateRequestReason" json:"reason,omitempty" firestore:"reason"`
}

func (x *PlugStateRequestRecord) Reset() {
	*x = PlugStateRequestRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugStateRequestRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugStateRequestRecord) ProtoMessage() {}

func (x *PlugStateRequestRecord) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugStateRequestRecord.ProtoReflect.Descriptor instead.
func (*PlugStateRequestRecord) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{2}
}

func (x *PlugStateRequestRecord) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *PlugStateRequestRecord) GetStateRequested() PlugStateRequest {
	if x != nil {
		return x.StateRequested
	}
	return PlugStateRequest_PlugStateRequest_UNKNOWN
}

func (x *PlugStateRequestRecord) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *PlugStateRequestRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlugStateRequestRecord) GetReason() PlugStateRequestReason {
	if x != nil {
		return x.Reason
	}
	return PlugStateRequestReason_PlugStateRequestReason_UNKNOWN
}

type PlugLocalStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestedState PlugStateRequest `protobuf:"varint,1,opt,name=requested_state,json=requestedState,proto3,enum=contracts.PlugStateRequest" json:"requested_state,omitempty" firestore:"requested_state"`
}

func (x *PlugLocalStateRequest) Reset() {
	*x = PlugLocalStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugLocalStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugLocalStateRequest) ProtoMessage() {}

func (x *PlugLocalStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugLocalStateRequest.ProtoReflect.Descriptor instead.
func (*PlugLocalStateRequest) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{3}
}

func (x *PlugLocalStateRequest) GetRequestedState() PlugStateRequest {
	if x != nil {
		return x.RequestedState
	}
	return PlugStateRequest_PlugStateRequest_UNKNOWN
}

type PlugLocalStateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentState PlugState `protobuf:"varint,1,opt,name=current_state,json=currentState,proto3,enum=contracts.PlugState" json:"current_state,omitempty" firestore:"current_state"`
}

func (x *PlugLocalStateResult) Reset() {
	*x = PlugLocalStateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugLocalStateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugLocalStateResult) ProtoMessage() {}

func (x *PlugLocalStateResult) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugLocalStateResult.ProtoReflect.Descriptor instead.
func (*PlugLocalStateResult) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{4}
}

func (x *PlugLocalStateResult) GetCurrentState() PlugState {
	if x != nil {
		return x.CurrentState
	}
	return PlugState_PlugState_UNKNOWN
}

type PlugStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlwaysOn   bool     `protobuf:"varint,1,opt,name=always_on,json=alwaysOn,proto3" json:"always_on,omitempty" firestore:"always_on"`         // Whether the plug requires the user to turn it on
	OwnerIds   []string `protobuf:"bytes,2,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty" firestore:"owner_ids"`          // People sign up to be owners if there's a strategy that requires it
	DurationMs int64    `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty" firestore:"duration_ms"` // The duration the user is signing up to pay for the plug for
}

func (x *PlugStrategy) Reset() {
	*x = PlugStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugStrategy) ProtoMessage() {}

func (x *PlugStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugStrategy.ProtoReflect.Descriptor instead.
func (*PlugStrategy) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{5}
}

func (x *PlugStrategy) GetAlwaysOn() bool {
	if x != nil {
		return x.AlwaysOn
	}
	return false
}

func (x *PlugStrategy) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *PlugStrategy) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId        string    `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`                                 // The site ID
	State         SiteState `protobuf:"varint,2,opt,name=state,proto3,enum=contracts.SiteState" json:"state,omitempty" firestore:"state"`                         // The state of the site
	Plugs         []*Plug   `protobuf:"bytes,3,rep,name=plugs,proto3" json:"plugs,omitempty" firestore:"plugs"`                                                   // The plugs at the site
	PlugIds       []string  `protobuf:"bytes,4,rep,name=plug_ids,json=plugIds,proto3" json:"plug_ids,omitempty" firestore:"plug_ids"`                             // The IDs of the plugs at the site, used for firestore queries
	LastUpdatedMs int64     `protobuf:"varint,5,opt,name=last_updated_ms,json=lastUpdatedMs,proto3" json:"last_updated_ms,omitempty" firestore:"last_updated_ms"` // The timestamp of the last update in milliseconds since epoch
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{6}
}

func (x *Site) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Site) GetState() SiteState {
	if x != nil {
		return x.State
	}
	return SiteState_SiteState_UNKNOWN
}

func (x *Site) GetPlugs() []*Plug {
	if x != nil {
		return x.Plugs
	}
	return nil
}

func (x *Site) GetPlugIds() []string {
	if x != nil {
		return x.PlugIds
	}
	return nil
}

func (x *Site) GetLastUpdatedMs() int64 {
	if x != nil {
		return x.LastUpdatedMs
	}
	return 0
}

type SiteSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`                              // The name of the site
	Description string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" firestore:"description"`         // The description of the site
	SiteId      string          `protobuf:"bytes,3,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`         // The site ID
	OwnerIds    []string        `protobuf:"bytes,4,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty" firestore:"owner_ids"` // People who have admin control over the site
	Strategy    *SiteStrategy   `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty" firestore:"strategy"`                  // The strategy for the site
	Plugs       []*PlugSettings `protobuf:"bytes,6,rep,name=plugs,proto3" json:"plugs,omitempty" firestore:"plugs"`                           // The settings for the plugs
	Tags        []string        `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" firestore:"tags"`                              // Tags for the site
}

func (x *SiteSetting) Reset() {
	*x = SiteSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetting) ProtoMessage() {}

func (x *SiteSetting) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetting.ProtoReflect.Descriptor instead.
func (*SiteSetting) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{7}
}

func (x *SiteSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteSetting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteSetting) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *SiteSetting) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *SiteSetting) GetStrategy() *SiteStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *SiteSetting) GetPlugs() []*PlugSettings {
	if x != nil {
		return x.Plugs
	}
	return nil
}

func (x *SiteSetting) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// may need to capture the strategy for the site as a whole
type SiteStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteStrategy) Reset() {
	*x = SiteStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStrategy) ProtoMessage() {}

func (x *SiteStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStrategy.ProtoReflect.Descriptor instead.
func (*SiteStrategy) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{8}
}

type Reading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       PlugState `protobuf:"varint,1,opt,name=state,proto3,enum=contracts.PlugState" json:"state,omitempty" firestore:"state"`               // Indicates if the relay is currently on, off, MIA, etc.
	Current     float64   `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty" firestore:"current"`                                 // The current power reading in watts
	Voltage     float64   `protobuf:"fixed64,3,opt,name=voltage,proto3" json:"voltage,omitempty" firestore:"voltage"`                                 // The voltage reading in volts
	PowerFactor float64   `protobuf:"fixed64,4,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty" firestore:"power_factor"` // Power factor, typically a value between -1 and 1
	Timestamp   int64     `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty" firestore:"timestamp"`                            // Timestamp of the reading in seconds since epoch
	Energy      float64   `protobuf:"fixed64,6,opt,name=energy,proto3" json:"energy,omitempty" firestore:"energy"`                                    // The energy reading in kWh
}

func (x *Reading) Reset() {
	*x = Reading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reading) ProtoMessage() {}

func (x *Reading) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reading.ProtoReflect.Descriptor instead.
func (*Reading) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{9}
}

func (x *Reading) GetState() PlugState {
	if x != nil {
		return x.State
	}
	return PlugState_PlugState_UNKNOWN
}

func (x *Reading) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Reading) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *Reading) GetPowerFactor() float64 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *Reading) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Reading) GetEnergy() float64 {
	if x != nil {
		return x.Energy
	}
	return 0
}

var File_contracts_objects_proto protoreflect.FileDescriptor

var file_contracts_objects_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x04, 0x50, 0x6c, 0x75, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x16,
	0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x15,
	0x50, 0x6c, 0x75, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x51, 0x0a, 0x14, 0x50,
	0x6c, 0x75, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x69,
	0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x04, 0x53, 0x69,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6c, 0x75, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x52, 0x05, 0x70, 0x6c, 0x75, 0x67, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d,
	0x73, 0x22, 0xf1, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x6c, 0x75, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x70, 0x6c, 0x75, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x2a, 0x64, 0x0a, 0x09, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03,
	0x2a, 0x75, 0x0a, 0x09, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x75,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4d, 0x49, 0x41, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x2a, 0x63, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x50,
	0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x75,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x2a, 0xa2, 0x01, 0x0a,
	0x16, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x6c, 0x75, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x50,
	0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x21,
	0x0a, 0x1d, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x10,
	0x03, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contracts_objects_proto_rawDescOnce sync.Once
	file_contracts_objects_proto_rawDescData = file_contracts_objects_proto_rawDesc
)

func file_contracts_objects_proto_rawDescGZIP() []byte {
	file_contracts_objects_proto_rawDescOnce.Do(func() {
		file_contracts_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_contracts_objects_proto_rawDescData)
	})
	return file_contracts_objects_proto_rawDescData
}

var file_contracts_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_contracts_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_contracts_objects_proto_goTypes = []interface{}{
	(SiteState)(0),                 // 0: contracts.SiteState
	(PlugState)(0),                 // 1: contracts.PlugState
	(PlugStateRequest)(0),          // 2: contracts.PlugStateRequest
	(PlugStateRequestReason)(0),    // 3: contracts.PlugStateRequestReason
	(*Plug)(nil),                   // 4: contracts.Plug
	(*PlugSettings)(nil),           // 5: contracts.PlugSettings
	(*PlugStateRequestRecord)(nil), // 6: contracts.PlugStateRequestRecord
	(*PlugLocalStateRequest)(nil),  // 7: contracts.PlugLocalStateRequest
	(*PlugLocalStateResult)(nil),   // 8: contracts.PlugLocalStateResult
	(*PlugStrategy)(nil),           // 9: contracts.PlugStrategy
	(*Site)(nil),                   // 10: contracts.Site
	(*SiteSetting)(nil),            // 11: contracts.SiteSetting
	(*SiteStrategy)(nil),           // 12: contracts.SiteStrategy
	(*Reading)(nil),                // 13: contracts.Reading
}
var file_contracts_objects_proto_depIdxs = []int32{
	13, // 0: contracts.Plug.reading:type_name -> contracts.Reading
	9,  // 1: contracts.PlugSettings.strategy:type_name -> contracts.PlugStrategy
	2,  // 2: contracts.PlugStateRequestRecord.state_requested:type_name -> contracts.PlugStateRequest
	3,  // 3: contracts.PlugStateRequestRecord.reason:type_name -> contracts.PlugStateRequestReason
	2,  // 4: contracts.PlugLocalStateRequest.requested_state:type_name -> contracts.PlugStateRequest
	1,  // 5: contracts.PlugLocalStateResult.current_state:type_name -> contracts.PlugState
	0,  // 6: contracts.Site.state:type_name -> contracts.SiteState
	4,  // 7: contracts.Site.plugs:type_name -> contracts.Plug
	12, // 8: contracts.SiteSetting.strategy:type_name -> contracts.SiteStrategy
	5,  // 9: contracts.SiteSetting.plugs:type_name -> contracts.PlugSettings
	1,  // 10: contracts.Reading.state:type_name -> contracts.PlugState
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_contracts_objects_proto_init() }
func file_contracts_objects_proto_init() {
	if File_contracts_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contracts_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugStateRequestRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugLocalStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugLocalStateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contracts_objects_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contracts_objects_proto_goTypes,
		DependencyIndexes: file_contracts_objects_proto_depIdxs,
		EnumInfos:         file_contracts_objects_proto_enumTypes,
		MessageInfos:      file_contracts_objects_proto_msgTypes,
	}.Build()
	File_contracts_objects_proto = out.File
	file_contracts_objects_proto_rawDesc = nil
	file_contracts_objects_proto_goTypes = nil
	file_contracts_objects_proto_depIdxs = nil
}
