// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: contracts/objects.proto

package contracts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StateMachineState int32

const (
	StateMachineState_StateMachineState_UNSPECIFIED              StateMachineState = 0
	StateMachineState_StateMachineState_ON                       StateMachineState = 1
	StateMachineState_StateMachineState_OFF                      StateMachineState = 2
	StateMachineState_StateMachineState_USER_REQUESTED_ON        StateMachineState = 3
	StateMachineState_StateMachineState_USER_REQUESTED_OFF       StateMachineState = 4
	StateMachineState_StateMachineState_LOCAL_COMMAND_ISSUED_ON  StateMachineState = 5
	StateMachineState_StateMachineState_LOCAL_COMMAND_ISSUED_OFF StateMachineState = 6
)

// Enum value maps for StateMachineState.
var (
	StateMachineState_name = map[int32]string{
		0: "StateMachineState_UNSPECIFIED",
		1: "StateMachineState_ON",
		2: "StateMachineState_OFF",
		3: "StateMachineState_USER_REQUESTED_ON",
		4: "StateMachineState_USER_REQUESTED_OFF",
		5: "StateMachineState_LOCAL_COMMAND_ISSUED_ON",
		6: "StateMachineState_LOCAL_COMMAND_ISSUED_OFF",
	}
	StateMachineState_value = map[string]int32{
		"StateMachineState_UNSPECIFIED":              0,
		"StateMachineState_ON":                       1,
		"StateMachineState_OFF":                      2,
		"StateMachineState_USER_REQUESTED_ON":        3,
		"StateMachineState_USER_REQUESTED_OFF":       4,
		"StateMachineState_LOCAL_COMMAND_ISSUED_ON":  5,
		"StateMachineState_LOCAL_COMMAND_ISSUED_OFF": 6,
	}
)

func (x StateMachineState) Enum() *StateMachineState {
	p := new(StateMachineState)
	*p = x
	return p
}

func (x StateMachineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateMachineState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[0].Descriptor()
}

func (StateMachineState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[0]
}

func (x StateMachineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateMachineState.Descriptor instead.
func (StateMachineState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

type UserRequestStatus int32

const (
	UserRequestStatus_RequestedStatus_UNKNOWN UserRequestStatus = 0
	// need to write a fs rule to only allow this status from non backend
	UserRequestStatus_RequestedStatus_PENDING UserRequestStatus = 1
	UserRequestStatus_RequestedStatus_SUCCESS UserRequestStatus = 2
	UserRequestStatus_RequestedStatus_FAILURE UserRequestStatus = 3 // TODO: add more failure reason statuses
)

// Enum value maps for UserRequestStatus.
var (
	UserRequestStatus_name = map[int32]string{
		0: "RequestedStatus_UNKNOWN",
		1: "RequestedStatus_PENDING",
		2: "RequestedStatus_SUCCESS",
		3: "RequestedStatus_FAILURE",
	}
	UserRequestStatus_value = map[string]int32{
		"RequestedStatus_UNKNOWN": 0,
		"RequestedStatus_PENDING": 1,
		"RequestedStatus_SUCCESS": 2,
		"RequestedStatus_FAILURE": 3,
	}
)

func (x UserRequestStatus) Enum() *UserRequestStatus {
	p := new(UserRequestStatus)
	*p = x
	return p
}

func (x UserRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[1].Descriptor()
}

func (UserRequestStatus) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[1]
}

func (x UserRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRequestStatus.Descriptor instead.
func (UserRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

type RequestedState int32

const (
	RequestedState_RequestedState_UNKNOWN RequestedState = 0 // Default value, used as a placeholder
	RequestedState_RequestedState_ON      RequestedState = 1 // Relay is on
	RequestedState_RequestedState_OFF     RequestedState = 2 // Relay is off
)

// Enum value maps for RequestedState.
var (
	RequestedState_name = map[int32]string{
		0: "RequestedState_UNKNOWN",
		1: "RequestedState_ON",
		2: "RequestedState_OFF",
	}
	RequestedState_value = map[string]int32{
		"RequestedState_UNKNOWN": 0,
		"RequestedState_ON":      1,
		"RequestedState_OFF":     2,
	}
)

func (x RequestedState) Enum() *RequestedState {
	p := new(RequestedState)
	*p = x
	return p
}

func (x RequestedState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestedState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[2].Descriptor()
}

func (RequestedState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[2]
}

func (x RequestedState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestedState.Descriptor instead.
func (RequestedState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{2}
}

type RequestedStateReason int32

const (
	RequestedStateReason_RequestedStateReason_UNKNOWN RequestedStateReason = 0 // Default value, used as a placeholder
	RequestedStateReason_RequestedStateReason_PRICE   RequestedStateReason = 1
	RequestedStateReason_RequestedStateReason_USER    RequestedStateReason = 2
	RequestedStateReason_RequestedStateReason_CREDIT  RequestedStateReason = 3
)

// Enum value maps for RequestedStateReason.
var (
	RequestedStateReason_name = map[int32]string{
		0: "RequestedStateReason_UNKNOWN",
		1: "RequestedStateReason_PRICE",
		2: "RequestedStateReason_USER",
		3: "RequestedStateReason_CREDIT",
	}
	RequestedStateReason_value = map[string]int32{
		"RequestedStateReason_UNKNOWN": 0,
		"RequestedStateReason_PRICE":   1,
		"RequestedStateReason_USER":    2,
		"RequestedStateReason_CREDIT":  3,
	}
)

func (x RequestedStateReason) Enum() *RequestedStateReason {
	p := new(RequestedStateReason)
	*p = x
	return p
}

func (x RequestedStateReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestedStateReason) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[3].Descriptor()
}

func (RequestedStateReason) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[3]
}

func (x RequestedStateReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestedStateReason.Descriptor instead.
func (RequestedStateReason) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{3}
}

type FuzeState int32

const (
	FuzeState_FuzeState_UNKNOWN  FuzeState = 0 // Default value, used as a placeholder
	FuzeState_FuzeState_OK       FuzeState = 1
	FuzeState_FuzeState_LIMITING FuzeState = 2
)

// Enum value maps for FuzeState.
var (
	FuzeState_name = map[int32]string{
		0: "FuzeState_UNKNOWN",
		1: "FuzeState_OK",
		2: "FuzeState_LIMITING",
	}
	FuzeState_value = map[string]int32{
		"FuzeState_UNKNOWN":  0,
		"FuzeState_OK":       1,
		"FuzeState_LIMITING": 2,
	}
)

func (x FuzeState) Enum() *FuzeState {
	p := new(FuzeState)
	*p = x
	return p
}

func (x FuzeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FuzeState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[4].Descriptor()
}

func (FuzeState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[4]
}

func (x FuzeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FuzeState.Descriptor instead.
func (FuzeState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{4}
}

type ActualState int32

const (
	ActualState_ActualState_UNKNOWN     ActualState = 0 // Default value, used as a placeholder
	ActualState_ActualState_ON          ActualState = 1 // Relay is on
	ActualState_ActualState_OFF         ActualState = 2 // Relay is off
	ActualState_ActualState_MIA         ActualState = 3 // Not available or missing
	ActualState_ActualState_OVERCURRENT ActualState = 4 // Overcurrent detected
)

// Enum value maps for ActualState.
var (
	ActualState_name = map[int32]string{
		0: "ActualState_UNKNOWN",
		1: "ActualState_ON",
		2: "ActualState_OFF",
		3: "ActualState_MIA",
		4: "ActualState_OVERCURRENT",
	}
	ActualState_value = map[string]int32{
		"ActualState_UNKNOWN":     0,
		"ActualState_ON":          1,
		"ActualState_OFF":         2,
		"ActualState_MIA":         3,
		"ActualState_OVERCURRENT": 4,
	}
)

func (x ActualState) Enum() *ActualState {
	p := new(ActualState)
	*p = x
	return p
}

func (x ActualState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActualState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[5].Descriptor()
}

func (ActualState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[5]
}

func (x ActualState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActualState.Descriptor instead.
func (ActualState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{5}
}

// FuzeGroup represents a collection of plugs that need to obey an electrical
// limit, ie all four plugs in a shelly 4pro.
type FuzeSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`
	CurrentLimit float64 `protobuf:"fixed64,3,opt,name=current_limit,json=currentLimit,proto3" json:"current_limit,omitempty" firestore:"current_limit"`
	SiteId       string  `protobuf:"bytes,4,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
}

func (x *FuzeSettings) Reset() {
	*x = FuzeSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuzeSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuzeSettings) ProtoMessage() {}

func (x *FuzeSettings) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuzeSettings.ProtoReflect.Descriptor instead.
func (*FuzeSettings) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

func (x *FuzeSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FuzeSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuzeSettings) GetCurrentLimit() float64 {
	if x != nil {
		return x.CurrentLimit
	}
	return 0
}

func (x *FuzeSettings) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

type StateMachineTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	State   StateMachineState `protobuf:"varint,2,opt,name=state,proto3,enum=contracts.StateMachineState" json:"state,omitempty" firestore:"state"`
	Reason  string            `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty" firestore:"reason"`
	TimeMs  int64             `protobuf:"varint,4,opt,name=time_ms,json=timeMs,proto3" json:"time_ms,omitempty" firestore:"time_ms"`
	PlugId  string            `protobuf:"bytes,5,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	OwnerId string            `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty" firestore:"owner_id"`
}

func (x *StateMachineTransition) Reset() {
	*x = StateMachineTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMachineTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMachineTransition) ProtoMessage() {}

func (x *StateMachineTransition) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMachineTransition.ProtoReflect.Descriptor instead.
func (*StateMachineTransition) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

func (x *StateMachineTransition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StateMachineTransition) GetState() StateMachineState {
	if x != nil {
		return x.State
	}
	return StateMachineState_StateMachineState_UNSPECIFIED
}

func (x *StateMachineTransition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *StateMachineTransition) GetTimeMs() int64 {
	if x != nil {
		return x.TimeMs
	}
	return 0
}

func (x *StateMachineTransition) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *StateMachineTransition) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type StateMachinePossibleNextStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlugId         string              `protobuf:"bytes,1,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	PossibleStates []StateMachineState `protobuf:"varint,2,rep,packed,name=possible_states,json=possibleStates,proto3,enum=contracts.StateMachineState" json:"possible_states,omitempty" firestore:"possible_states"`
}

func (x *StateMachinePossibleNextStates) Reset() {
	*x = StateMachinePossibleNextStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateMachinePossibleNextStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateMachinePossibleNextStates) ProtoMessage() {}

func (x *StateMachinePossibleNextStates) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateMachinePossibleNextStates.ProtoReflect.Descriptor instead.
func (*StateMachinePossibleNextStates) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{2}
}

func (x *StateMachinePossibleNextStates) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *StateMachinePossibleNextStates) GetPossibleStates() []StateMachineState {
	if x != nil {
		return x.PossibleStates
	}
	return nil
}

// plug settings are all the things the user can update in the UI
type PlugSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`
	CurrentLimit float64 `protobuf:"fixed64,3,opt,name=current_limit,json=currentLimit,proto3" json:"current_limit,omitempty" firestore:"current_limit"`
	SiteId       string  `protobuf:"bytes,4,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
	// used to decide whether to update latest_reading in the plugstatus.
	// if a user has checked recently, update, otherwise, do not write readings
	// value.
	LastTimeUserCheckingMs int64 `protobuf:"varint,5,opt,name=last_time_user_checking_ms,json=lastTimeUserCheckingMs,proto3" json:"last_time_user_checking_ms,omitempty" firestore:"last_time_user_checking_ms"`
}

func (x *PlugSettings) Reset() {
	*x = PlugSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugSettings) ProtoMessage() {}

func (x *PlugSettings) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugSettings.ProtoReflect.Descriptor instead.
func (*PlugSettings) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{3}
}

func (x *PlugSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlugSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlugSettings) GetCurrentLimit() float64 {
	if x != nil {
		return x.CurrentLimit
	}
	return 0
}

func (x *PlugSettings) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *PlugSettings) GetLastTimeUserCheckingMs() int64 {
	if x != nil {
		return x.LastTimeUserCheckingMs
	}
	return 0
}

type LocalStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	PlugId         string         `protobuf:"bytes,2,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	SiteId         string         `protobuf:"bytes,3,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
	RequestedState RequestedState `protobuf:"varint,4,opt,name=requested_state,json=requestedState,proto3,enum=contracts.RequestedState" json:"requested_state,omitempty" firestore:"requested_state"`
	RequestTime    int64          `protobuf:"varint,5,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty" firestore:"request_time"`
}

func (x *LocalStateRequest) Reset() {
	*x = LocalStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalStateRequest) ProtoMessage() {}

func (x *LocalStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalStateRequest.ProtoReflect.Descriptor instead.
func (*LocalStateRequest) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{4}
}

func (x *LocalStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LocalStateRequest) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *LocalStateRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *LocalStateRequest) GetRequestedState() RequestedState {
	if x != nil {
		return x.RequestedState
	}
	return RequestedState_RequestedState_UNKNOWN
}

func (x *LocalStateRequest) GetRequestTime() int64 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

type LocalStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqId          string         `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty" firestore:"req_id"`
	ResultantState RequestedState `protobuf:"varint,2,opt,name=resultant_state,json=resultantState,proto3,enum=contracts.RequestedState" json:"resultant_state,omitempty" firestore:"resultant_state"`
	PlugId         string         `protobuf:"bytes,3,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	SiteId         string         `protobuf:"bytes,4,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
	Time           int64          `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty" firestore:"time"`
}

func (x *LocalStateResponse) Reset() {
	*x = LocalStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalStateResponse) ProtoMessage() {}

func (x *LocalStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalStateResponse.ProtoReflect.Descriptor instead.
func (*LocalStateResponse) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{5}
}

func (x *LocalStateResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *LocalStateResponse) GetResultantState() RequestedState {
	if x != nil {
		return x.ResultantState
	}
	return RequestedState_RequestedState_UNKNOWN
}

func (x *LocalStateResponse) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *LocalStateResponse) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *LocalStateResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// this gets written by the frontend and never edited
type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	UserId         string             `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" firestore:"user_id"`
	PlugId         string             `protobuf:"bytes,3,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	RequestedState StateMachineState  `protobuf:"varint,4,opt,name=requested_state,json=requestedState,proto3,enum=contracts.StateMachineState" json:"requested_state,omitempty" firestore:"requested_state"`
	TimeRequested  int64              `protobuf:"varint,5,opt,name=time_requested,json=timeRequested,proto3" json:"time_requested,omitempty" firestore:"time_requested"`
	Result         *UserRequestResult `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty" firestore:"result"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{6}
}

func (x *UserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRequest) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *UserRequest) GetRequestedState() StateMachineState {
	if x != nil {
		return x.RequestedState
	}
	return StateMachineState_StateMachineState_UNSPECIFIED
}

func (x *UserRequest) GetTimeRequested() int64 {
	if x != nil {
		return x.TimeRequested
	}
	return 0
}

func (x *UserRequest) GetResult() *UserRequestResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// this can only be written by the backend and shows the result of a request
type UserRequestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeEnteredState int64             `protobuf:"varint,1,opt,name=time_entered_state,json=timeEnteredState,proto3" json:"time_entered_state,omitempty" firestore:"time_entered_state"`
	Status           UserRequestStatus `protobuf:"varint,2,opt,name=status,proto3,enum=contracts.UserRequestStatus" json:"status,omitempty" firestore:"status"`
}

func (x *UserRequestResult) Reset() {
	*x = UserRequestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequestResult) ProtoMessage() {}

func (x *UserRequestResult) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequestResult.ProtoReflect.Descriptor instead.
func (*UserRequestResult) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{7}
}

func (x *UserRequestResult) GetTimeEnteredState() int64 {
	if x != nil {
		return x.TimeEnteredState
	}
	return 0
}

func (x *UserRequestResult) GetStatus() UserRequestStatus {
	if x != nil {
		return x.Status
	}
	return UserRequestStatus_RequestedStatus_UNKNOWN
}

// this is what is used by the frontend to visualise what's going on.
// it should only be updateable by the mothership
// it's also used on startup of the mothership to hydrate its statemachinemap
type PlugStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	SiteId        string                  `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
	State         *StateMachineTransition `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty" firestore:"state"`
	LatestReading *Reading                `protobuf:"bytes,4,opt,name=latest_reading,json=latestReading,proto3" json:"latest_reading,omitempty" firestore:"latest_reading"`
}

func (x *PlugStatus) Reset() {
	*x = PlugStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugStatus) ProtoMessage() {}

func (x *PlugStatus) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugStatus.ProtoReflect.Descriptor instead.
func (*PlugStatus) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{8}
}

func (x *PlugStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlugStatus) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *PlugStatus) GetState() *StateMachineTransition {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *PlugStatus) GetLatestReading() *Reading {
	if x != nil {
		return x.LatestReading
	}
	return nil
}

type Reading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       ActualState `protobuf:"varint,1,opt,name=state,proto3,enum=contracts.ActualState" json:"state,omitempty" firestore:"state"`             // Indicates if the relay is currently on, off, MIA, etc.
	Current     float64     `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty" firestore:"current"`                                 // The current power reading in watts
	Voltage     float64     `protobuf:"fixed64,3,opt,name=voltage,proto3" json:"voltage,omitempty" firestore:"voltage"`                                 // The voltage reading in volts
	PowerFactor float64     `protobuf:"fixed64,4,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty" firestore:"power_factor"` // Power factor, typically a value between -1 and 1
	Timestamp   int64       `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty" firestore:"timestamp"`                            // Timestamp of the reading in seconds since epoch
	Energy      float64     `protobuf:"fixed64,6,opt,name=energy,proto3" json:"energy,omitempty" firestore:"energy"`                                    // The energy reading in kWh
	PlugId      string      `protobuf:"bytes,7,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"`
	FuzeId      string      `protobuf:"bytes,8,opt,name=fuze_id,json=fuzeId,proto3" json:"fuze_id,omitempty" firestore:"fuze_id"`
}

func (x *Reading) Reset() {
	*x = Reading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reading) ProtoMessage() {}

func (x *Reading) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reading.ProtoReflect.Descriptor instead.
func (*Reading) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{9}
}

func (x *Reading) GetState() ActualState {
	if x != nil {
		return x.State
	}
	return ActualState_ActualState_UNKNOWN
}

func (x *Reading) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Reading) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *Reading) GetPowerFactor() float64 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *Reading) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Reading) GetEnergy() float64 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *Reading) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *Reading) GetFuzeId() string {
	if x != nil {
		return x.FuzeId
	}
	return ""
}

type ReadingChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string     `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`
	Readings []*Reading `protobuf:"bytes,2,rep,name=readings,proto3" json:"readings,omitempty" firestore:"readings"`
}

func (x *ReadingChunk) Reset() {
	*x = ReadingChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadingChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadingChunk) ProtoMessage() {}

func (x *ReadingChunk) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadingChunk.ProtoReflect.Descriptor instead.
func (*ReadingChunk) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{10}
}

func (x *ReadingChunk) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *ReadingChunk) GetReadings() []*Reading {
	if x != nil {
		return x.Readings
	}
	return nil
}

type SiteSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" firestore:"id"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" firestore:"description"`
}

func (x *SiteSettings) Reset() {
	*x = SiteSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSettings) ProtoMessage() {}

func (x *SiteSettings) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSettings.ProtoReflect.Descriptor instead.
func (*SiteSettings) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{11}
}

func (x *SiteSettings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SiteSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteSettings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_contracts_objects_proto protoreflect.FileDescriptor

var file_contracts_objects_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x70, 0x0a, 0x0c, 0x46, 0x75, 0x7a, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x70,
	0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xac, 0x01,
	0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x12,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x71, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xf6,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x65,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x75, 0x7a, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x75, 0x7a, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x54, 0x0a, 0x0c, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x9d, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x1d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f,
	0x46, 0x46, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x28, 0x0a,
	0x24, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45,
	0x44, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x04, 0x12, 0x2d, 0x0a, 0x29, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45,
	0x44, 0x5f, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x2e, 0x0a, 0x2a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4c, 0x4f, 0x43, 0x41,
	0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x44,
	0x5f, 0x4f, 0x46, 0x46, 0x10, 0x06, 0x2a, 0x87, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x03,
	0x2a, 0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x2a, 0x98, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x4c, 0x0a, 0x09, 0x46, 0x75, 0x7a, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x75, 0x7a, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x75, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x46, 0x75, 0x7a, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x2a, 0x81, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f,
	0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4d, 0x49, 0x41, 0x10, 0x03, 0x12, 0x1b, 0x0a,
	0x17, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x56, 0x45,
	0x52, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_contracts_objects_proto_rawDescOnce sync.Once
	file_contracts_objects_proto_rawDescData = file_contracts_objects_proto_rawDesc
)

func file_contracts_objects_proto_rawDescGZIP() []byte {
	file_contracts_objects_proto_rawDescOnce.Do(func() {
		file_contracts_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_contracts_objects_proto_rawDescData)
	})
	return file_contracts_objects_proto_rawDescData
}

var file_contracts_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_contracts_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_contracts_objects_proto_goTypes = []interface{}{
	(StateMachineState)(0),                 // 0: contracts.StateMachineState
	(UserRequestStatus)(0),                 // 1: contracts.UserRequestStatus
	(RequestedState)(0),                    // 2: contracts.RequestedState
	(RequestedStateReason)(0),              // 3: contracts.RequestedStateReason
	(FuzeState)(0),                         // 4: contracts.FuzeState
	(ActualState)(0),                       // 5: contracts.ActualState
	(*FuzeSettings)(nil),                   // 6: contracts.FuzeSettings
	(*StateMachineTransition)(nil),         // 7: contracts.StateMachineTransition
	(*StateMachinePossibleNextStates)(nil), // 8: contracts.StateMachinePossibleNextStates
	(*PlugSettings)(nil),                   // 9: contracts.PlugSettings
	(*LocalStateRequest)(nil),              // 10: contracts.LocalStateRequest
	(*LocalStateResponse)(nil),             // 11: contracts.LocalStateResponse
	(*UserRequest)(nil),                    // 12: contracts.UserRequest
	(*UserRequestResult)(nil),              // 13: contracts.UserRequestResult
	(*PlugStatus)(nil),                     // 14: contracts.PlugStatus
	(*Reading)(nil),                        // 15: contracts.Reading
	(*ReadingChunk)(nil),                   // 16: contracts.ReadingChunk
	(*SiteSettings)(nil),                   // 17: contracts.SiteSettings
}
var file_contracts_objects_proto_depIdxs = []int32{
	0,  // 0: contracts.StateMachineTransition.state:type_name -> contracts.StateMachineState
	0,  // 1: contracts.StateMachinePossibleNextStates.possible_states:type_name -> contracts.StateMachineState
	2,  // 2: contracts.LocalStateRequest.requested_state:type_name -> contracts.RequestedState
	2,  // 3: contracts.LocalStateResponse.resultant_state:type_name -> contracts.RequestedState
	0,  // 4: contracts.UserRequest.requested_state:type_name -> contracts.StateMachineState
	13, // 5: contracts.UserRequest.result:type_name -> contracts.UserRequestResult
	1,  // 6: contracts.UserRequestResult.status:type_name -> contracts.UserRequestStatus
	7,  // 7: contracts.PlugStatus.state:type_name -> contracts.StateMachineTransition
	15, // 8: contracts.PlugStatus.latest_reading:type_name -> contracts.Reading
	5,  // 9: contracts.Reading.state:type_name -> contracts.ActualState
	15, // 10: contracts.ReadingChunk.readings:type_name -> contracts.Reading
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_contracts_objects_proto_init() }
func file_contracts_objects_proto_init() {
	if File_contracts_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contracts_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuzeSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMachineTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateMachinePossibleNextStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadingChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contracts_objects_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contracts_objects_proto_goTypes,
		DependencyIndexes: file_contracts_objects_proto_depIdxs,
		EnumInfos:         file_contracts_objects_proto_enumTypes,
		MessageInfos:      file_contracts_objects_proto_msgTypes,
	}.Build()
	File_contracts_objects_proto = out.File
	file_contracts_objects_proto_rawDesc = nil
	file_contracts_objects_proto_goTypes = nil
	file_contracts_objects_proto_depIdxs = nil
}
