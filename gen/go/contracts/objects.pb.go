// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: contracts/objects.proto

package contracts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SiteState int32

const (
	SiteState_SiteState_UNKNOWN SiteState = 0 // Default value, used as a placeholder
	SiteState_SiteState_ONLINE  SiteState = 1 // Relay is on
	SiteState_SiteState_OFFLINE SiteState = 2 // Relay is off
	SiteState_SiteState_ERROR   SiteState = 3 // Not available or missing
)

// Enum value maps for SiteState.
var (
	SiteState_name = map[int32]string{
		0: "SiteState_UNKNOWN",
		1: "SiteState_ONLINE",
		2: "SiteState_OFFLINE",
		3: "SiteState_ERROR",
	}
	SiteState_value = map[string]int32{
		"SiteState_UNKNOWN": 0,
		"SiteState_ONLINE":  1,
		"SiteState_OFFLINE": 2,
		"SiteState_ERROR":   3,
	}
)

func (x SiteState) Enum() *SiteState {
	p := new(SiteState)
	*p = x
	return p
}

func (x SiteState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SiteState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[0].Descriptor()
}

func (SiteState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[0]
}

func (x SiteState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SiteState.Descriptor instead.
func (SiteState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

type PlugState int32

const (
	PlugState_PlugState_UNKNOWN     PlugState = 0 // Default value, used as a placeholder
	PlugState_PlugState_ON          PlugState = 1 // Relay is on
	PlugState_PlugState_OFF         PlugState = 2 // Relay is off
	PlugState_PlugState_MIA         PlugState = 3 // Not available or missing
	PlugState_PlugState_OVERCURRENT PlugState = 4 // Overcurrent detected
)

// Enum value maps for PlugState.
var (
	PlugState_name = map[int32]string{
		0: "PlugState_UNKNOWN",
		1: "PlugState_ON",
		2: "PlugState_OFF",
		3: "PlugState_MIA",
		4: "PlugState_OVERCURRENT",
	}
	PlugState_value = map[string]int32{
		"PlugState_UNKNOWN":     0,
		"PlugState_ON":          1,
		"PlugState_OFF":         2,
		"PlugState_MIA":         3,
		"PlugState_OVERCURRENT": 4,
	}
)

func (x PlugState) Enum() *PlugState {
	p := new(PlugState)
	*p = x
	return p
}

func (x PlugState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlugState) Descriptor() protoreflect.EnumDescriptor {
	return file_contracts_objects_proto_enumTypes[1].Descriptor()
}

func (PlugState) Type() protoreflect.EnumType {
	return &file_contracts_objects_proto_enumTypes[1]
}

func (x PlugState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlugState.Descriptor instead.
func (PlugState) EnumDescriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

type Plug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlugId   string     `protobuf:"bytes,1,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"` // The plug ID
	SiteId   string     `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"` // The site ID
	Readings []*Reading `protobuf:"bytes,3,rep,name=readings,proto3" json:"readings,omitempty" firestore:"readings"`          // The readings for the plug
}

func (x *Plug) Reset() {
	*x = Plug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plug) ProtoMessage() {}

func (x *Plug) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plug.ProtoReflect.Descriptor instead.
func (*Plug) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{0}
}

func (x *Plug) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *Plug) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Plug) GetReadings() []*Reading {
	if x != nil {
		return x.Readings
	}
	return nil
}

type PlugSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`                      // The name of the plug
	SiteId   string        `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"` // The site ID
	PlugId   string        `protobuf:"bytes,3,opt,name=plug_id,json=plugId,proto3" json:"plug_id,omitempty" firestore:"plug_id"` // The plug ID
	Strategy *PlugStrategy `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty" firestore:"strategy"`          // The strategy for the plug
}

func (x *PlugSettings) Reset() {
	*x = PlugSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugSettings) ProtoMessage() {}

func (x *PlugSettings) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugSettings.ProtoReflect.Descriptor instead.
func (*PlugSettings) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{1}
}

func (x *PlugSettings) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlugSettings) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *PlugSettings) GetPlugId() string {
	if x != nil {
		return x.PlugId
	}
	return ""
}

func (x *PlugSettings) GetStrategy() *PlugStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

type PlugStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlwaysOn   bool     `protobuf:"varint,1,opt,name=always_on,json=alwaysOn,proto3" json:"always_on,omitempty" firestore:"always_on"`         // Whether the plug requires the user to turn it on
	OwnerIds   []string `protobuf:"bytes,2,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty" firestore:"owner_ids"`          // People sign up to be owners if there's a strategy that requires it
	DurationMs int64    `protobuf:"varint,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty" firestore:"duration_ms"` // The duration the user is signing up to pay for the plug for
}

func (x *PlugStrategy) Reset() {
	*x = PlugStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlugStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlugStrategy) ProtoMessage() {}

func (x *PlugStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlugStrategy.ProtoReflect.Descriptor instead.
func (*PlugStrategy) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{2}
}

func (x *PlugStrategy) GetAlwaysOn() bool {
	if x != nil {
		return x.AlwaysOn
	}
	return false
}

func (x *PlugStrategy) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *PlugStrategy) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

type Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string    `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`         // The site ID
	SiteName string    `protobuf:"bytes,2,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty" firestore:"site_name"` // The site name
	State    SiteState `protobuf:"varint,3,opt,name=state,proto3,enum=contracts.SiteState" json:"state,omitempty" firestore:"state"` // The state of the site
}

func (x *Site) Reset() {
	*x = Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Site) ProtoMessage() {}

func (x *Site) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Site.ProtoReflect.Descriptor instead.
func (*Site) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{3}
}

func (x *Site) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Site) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *Site) GetState() SiteState {
	if x != nil {
		return x.State
	}
	return SiteState_SiteState_UNKNOWN
}

type SiteSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" firestore:"name"`                              // The name of the site
	SiteId   string        `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty" firestore:"site_id"`         // The site ID
	OwnerIds []string      `protobuf:"bytes,3,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty" firestore:"owner_ids"` // People who have admin control over the site
	Strategy *SiteStrategy `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty" firestore:"strategy"`                  // The strategy for the site
}

func (x *SiteSetting) Reset() {
	*x = SiteSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSetting) ProtoMessage() {}

func (x *SiteSetting) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSetting.ProtoReflect.Descriptor instead.
func (*SiteSetting) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{4}
}

func (x *SiteSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteSetting) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *SiteSetting) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *SiteSetting) GetStrategy() *SiteStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

// may need to capture the strategy for the site as a whole
type SiteStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SiteStrategy) Reset() {
	*x = SiteStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStrategy) ProtoMessage() {}

func (x *SiteStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStrategy.ProtoReflect.Descriptor instead.
func (*SiteStrategy) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{5}
}

type Reading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       PlugState `protobuf:"varint,1,opt,name=state,proto3,enum=contracts.PlugState" json:"state,omitempty" firestore:"state"`               // Indicates if the relay is currently on, off, MIA, etc.
	Current     float64   `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty" firestore:"current"`                                 // The current power reading in watts
	Voltage     float64   `protobuf:"fixed64,3,opt,name=voltage,proto3" json:"voltage,omitempty" firestore:"voltage"`                                 // The voltage reading in volts
	PowerFactor float64   `protobuf:"fixed64,4,opt,name=power_factor,json=powerFactor,proto3" json:"power_factor,omitempty" firestore:"power_factor"` // Power factor, typically a value between -1 and 1
	Timestamp   int64     `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty" firestore:"timestamp"`                            // Timestamp of the reading in seconds since epoch
}

func (x *Reading) Reset() {
	*x = Reading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contracts_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reading) ProtoMessage() {}

func (x *Reading) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reading.ProtoReflect.Descriptor instead.
func (*Reading) Descriptor() ([]byte, []int) {
	return file_contracts_objects_proto_rawDescGZIP(), []int{6}
}

func (x *Reading) GetState() PlugState {
	if x != nil {
		return x.State
	}
	return PlugState_PlugState_UNKNOWN
}

func (x *Reading) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Reading) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *Reading) GetPowerFactor() float64 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *Reading) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_contracts_objects_proto protoreflect.FileDescriptor

var file_contracts_objects_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x04, 0x50, 0x6c, 0x75, 0x67, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6c, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x75, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x69, 0x0a, 0x0c, 0x50, 0x6c,
	0x75, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c,
	0x77, 0x61, 0x79, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61,
	0x6c, 0x77, 0x61, 0x79, 0x73, 0x4f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x22, 0x68, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x8c, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x0e,
	0x0a, 0x0c, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0xaa,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x64, 0x0a, 0x09, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x2a, 0x75, 0x0a, 0x09, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6c,
	0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4d, 0x49, 0x41, 0x10, 0x03, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x6c, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contracts_objects_proto_rawDescOnce sync.Once
	file_contracts_objects_proto_rawDescData = file_contracts_objects_proto_rawDesc
)

func file_contracts_objects_proto_rawDescGZIP() []byte {
	file_contracts_objects_proto_rawDescOnce.Do(func() {
		file_contracts_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_contracts_objects_proto_rawDescData)
	})
	return file_contracts_objects_proto_rawDescData
}

var file_contracts_objects_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_contracts_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_contracts_objects_proto_goTypes = []interface{}{
	(SiteState)(0),       // 0: contracts.SiteState
	(PlugState)(0),       // 1: contracts.PlugState
	(*Plug)(nil),         // 2: contracts.Plug
	(*PlugSettings)(nil), // 3: contracts.PlugSettings
	(*PlugStrategy)(nil), // 4: contracts.PlugStrategy
	(*Site)(nil),         // 5: contracts.Site
	(*SiteSetting)(nil),  // 6: contracts.SiteSetting
	(*SiteStrategy)(nil), // 7: contracts.SiteStrategy
	(*Reading)(nil),      // 8: contracts.Reading
}
var file_contracts_objects_proto_depIdxs = []int32{
	8, // 0: contracts.Plug.readings:type_name -> contracts.Reading
	4, // 1: contracts.PlugSettings.strategy:type_name -> contracts.PlugStrategy
	0, // 2: contracts.Site.state:type_name -> contracts.SiteState
	7, // 3: contracts.SiteSetting.strategy:type_name -> contracts.SiteStrategy
	1, // 4: contracts.Reading.state:type_name -> contracts.PlugState
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_contracts_objects_proto_init() }
func file_contracts_objects_proto_init() {
	if File_contracts_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contracts_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlugStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contracts_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contracts_objects_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contracts_objects_proto_goTypes,
		DependencyIndexes: file_contracts_objects_proto_depIdxs,
		EnumInfos:         file_contracts_objects_proto_enumTypes,
		MessageInfos:      file_contracts_objects_proto_msgTypes,
	}.Build()
	File_contracts_objects_proto = out.File
	file_contracts_objects_proto_rawDesc = nil
	file_contracts_objects_proto_goTypes = nil
	file_contracts_objects_proto_depIdxs = nil
}
