syntax = "proto3";

package contracts;

option go_package = "go/contracts";

// FuzeGroup represents a collection of plugs that need to obey an electrical
// limit, ie all four plugs in a shelly 4pro.
message FuzeSettings {
  string id = 1;
  string name = 2;
  double current_limit = 3;
  string site_id = 4;
}

message PlugSettings {
  string id = 1;
  string name = 2;
  double current_limit = 3;
  string site_id = 4;
  repeated string owner_ids = 5;
}

message PlugCommand {
  RequestedState requested_state = 1;
  RequestedStateReason reason = 2;
  int64 time = 3;
  string requestor = 4;
  string command_id = 5;
  string plug_id = 6;
}

enum RequestedState {
  RequestedState_UNKNOWN = 0;  // Default value, used as a placeholder
  RequestedState_ON = 1;       // Relay is on
  RequestedState_OFF = 2;      // Relay is off
}

enum RequestedStateReason {
  RequestedStateReason_UNKNOWN = 0;  // Default value, used as a placeholder
  RequestedStateReason_PRICE = 1;
  RequestedStateReason_USER = 2;
  RequestedStateReason_CREDIT = 3;
}

message PlugAction {
  int64 time = 3;
  string command_id = 5;
  string plug_id = 6;
  string action_id = 7;
}

message FuzeLocalState {
  string id = 1;
  double current = 2;
  FuzeState state = 3;
}

enum FuzeState {
  FuzeState_UNKNOWN = 0;  // Default value, used as a placeholder
  FuzeState_OK = 1;
  FuzeState_LIMITING = 2;
}

message PlugLocalState {
  string id = 1;
  Reading latest_reading = 2;
  string latest_command_id = 3;
  string latest_action_id = 4;
}

enum ActualState {
  ActualState_UNKNOWN = 0;      // Default value, used as a placeholder
  ActualState_ON = 1;           // Relay is on
  ActualState_OFF = 2;          // Relay is off
  ActualState_MIA = 3;          // Not available or missing
  ActualState_OVERCURRENT = 4;  // Overcurrent detected
  // TODO: decide how we represent off for cost reasons etc
}

message Reading {
  ActualState state =
      1;               // Indicates if the relay is currently on, off, MIA, etc.
  double current = 2;  // The current power reading in watts
  double voltage = 3;  // The voltage reading in volts
  double power_factor = 4;  // Power factor, typically a value between -1 and 1
  int64 timestamp = 5;      // Timestamp of the reading in seconds since epoch
  double energy = 6;        // The energy reading in kWh
  string plug_id = 7;
  string fuze_id = 8;
}

message ReadingChunk {
  string site_id = 1;
  repeated Reading readings = 2;
}

message SiteSettings {
  string id = 1;
  string name = 2;
  string description = 3;
  repeated string owner_ids = 4;
  repeated string tags = 6;
}