name: Deploy to Firebase Hosting on PR

on: pull_request

env:
  DEPLOY_CONF: ${{ github.workspace }}/.github/workflows/deploy.conf

jobs:
  build_and_preview:
    if: "${{ github.event.pull_request.head.repo.full_name == github.repository }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install and Build
        run: |
          cd frontend 
          npm ci 
          npm run build

      # get federated creds
      - name: Source deploy.conf
        id: source_conf
        run: |
          source $DEPLOY_CONF
          echo "WORKLOAD_IDENTITY_PROVIDER=$WORKLOAD_IDENTITY_PROVIDER" >> $GITHUB_ENV
          echo "SERVICE_ACCOUNT=$SERVICE_ACCOUNT" >> $GITHUB_ENV

      - name: Print Environment Variables for Debugging
        run: |
          echo "DEPLOY_CONF=$DEPLOY_CONF"
          echo "WORKLOAD_IDENTITY_PROVIDER=$WORKLOAD_IDENTITY_PROVIDER"
          echo "SERVICE_ACCOUNT=$SERVICE_ACCOUNT"

      - name: Authenticate with GCP
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          create_credentials_file: true

      - name: Set SERVICE_ACCOUNT_KEY Env Var
        run: |
          echo "SERVICE_ACCOUNT_KEY=$(cat "${{ steps.auth.outputs.credentials_file_path }}" | tr -d '\n')" >> $GITHUB_ENV

      # deploy to firebase
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: "${{ env.SERVICE_ACCOUNT_KEY }}"
          projectId: "${{ env.PROJECT_ID }}"
