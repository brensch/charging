name: Deploy

on:
  push:
    branches:
      - main

env:
  DEPLOY_CONF: ${{ github.workspace }}/.github/workflows/deploy.conf

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Source deploy.conf
        run: source $DEPLOY_CONF

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          source: "./mothership"
          service: "mothership"
          region: "australia-southeast2"

  deploy-frontend: # Placeholder for the frontend deployment logic
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Source deploy.conf
        run: source $DEPLOY_CONF

  # deploy-to-firebase:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     # Build your React app
  #     - name: Install Dependencies and Build
  #       run: |
  #         cd frontend
  #         npm install
  #         npm run build

  #     # Authenticate with Google Cloud using the federated identity and create a credentials file
  #     - id: auth
  #       uses: 'google-github-actions/auth@v1'
  #       with:
  #         workload_identity_provider: ${{ needs.setup.outputs.workload_identity_provider }}
  #         service_account: ${{ needs.setup.outputs.service_account }}
  #         create_credentials_file: true

  #     - run: |
  #         echo "SERVICE_ACCOUNT_KEY=$(cat "${{ steps.auth.outputs.credentials_file_path }}" | tr -d '\n')" >> $GITHUB_ENV

  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         firebaseServiceAccount: "${{ env.SERVICE_ACCOUNT_KEY }}"
