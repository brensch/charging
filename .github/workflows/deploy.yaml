name: Deploy

on:
  push:
    branches:
      - main

env:
  DEPLOY_CONF: ${{ github.workspace }}/.github/workflows/deploy.conf

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      project_id: ${{ steps.set-vars.outputs.project_id }}
      service_account: ${{ steps.set-vars.outputs.service_account }}
      workload_identity_provider: ${{ steps.set-vars.outputs.workload_identity_provider }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Environment Variables from deploy.conf
        id: set-vars
        run: |
          echo "Reading deploy.conf..."
          source $DEPLOY_CONF
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "service_account=$SERVICE_ACCOUNT" >> $GITHUB_OUTPUT
          echo "workload_identity_provider=$WORKLOAD_IDENTITY_PROVIDER" >> $GITHUB_OUTPUT

      # - name: Set Environment Variables from deploy.conf
      #   id: set-vars
      #   run: |
      #     echo "Reading deploy.conf..."
      #     source $DEPLOY_CONF
      #     echo "Setting GitHub Actions outputs..."
      #     echo "::set-output name=project_id::$PROJECT_ID"
      #     echo "::set-output name=service_account::$SERVICE_ACCOUNT"
      #     echo "::set-output name=workload_identity_provider::$WORKLOAD_IDENTITY_PROVIDER"

  deploy-payment:
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: "Auth"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ needs.setup.outputs.workload_identity_provider }}
          service_account: ${{ needs.setup.outputs.service_account }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ needs.setup.outputs.project_id }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and Push Docker image to Google Container Registry
        run: |
          gcloud builds submit --config cloudbuild.yaml --substitutions=_PROJECT_ID=${{ needs.setup.outputs.project_id }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy payments \
            --image gcr.io/${{ needs.setup.outputs.project_id }}/payments:latest \
            --platform managed \
            --region australia-southeast1 \
            --allow-unauthenticated

  # deploy-payment:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   steps:
  #     - id: "Checkout"
  #       uses: actions/checkout@v3
  #     - id: "Auth"
  #       uses: "google-github-actions/auth@v1"
  #       with:
  #         workload_identity_provider: ${{ needs.setup.outputs.workload_identity_provider }}
  #         service_account: ${{ needs.setup.outputs.service_account }}
  #     - name: "Deploy"
  #       uses: "google-github-actions/deploy-cloudrun@v1"
  #       with:
  #         source: "./"
  #         service: "payments"
  #         region: "australia-southeast1"
  #         entrypoint: "./payments"

  # deploy-backend:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   steps:
  #     - id: "Checkout"
  #       uses: actions/checkout@v3
  #     - id: "Auth"
  #       uses: "google-github-actions/auth@v1"
  #       with:
  #         workload_identity_provider: ${{ needs.setup.outputs.workload_identity_provider }}
  #         service_account: ${{ needs.setup.outputs.service_account }}
  #     - name: "Deploy"
  #       uses: "google-github-actions/deploy-cloudrun@v1"
  #       with:
  #         source: "./mothership"
  #         service: "mothership"
  #         region: "australia-southeast2"

  # deploy-to-firebase:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     # Build your React app
  #     - name: Install Dependencies and Build
  #       run: |
  #         cd frontend
  #         npm install
  #         npm run build

  #     # Authenticate with Google Cloud using the federated identity and create a credentials file
  #     - id: auth
  #       uses: 'google-github-actions/auth@v1'
  #       with:
  #         workload_identity_provider: ${{ needs.setup.outputs.workload_identity_provider }}
  #         service_account: ${{ needs.setup.outputs.service_account }}
  #         create_credentials_file: true

  #     - run: |
  #         echo "SERVICE_ACCOUNT_KEY=$(cat "${{ steps.auth.outputs.credentials_file_path }}" | tr -d '\n')" >> $GITHUB_ENV

  #     - uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         firebaseServiceAccount: "${{ env.SERVICE_ACCOUNT_KEY }}"
